<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cloud</groupId>
	<artifactId>blomni-config-server</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>blomni-config-server</name>
	<description>blomni-config-server</description>

	 <parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-parent</artifactId>
		<version>Dalston.SR5</version>
		<relativePath /> 
	</parent>

	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>
	<!-- <repositories>
		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>public</id>
			<name>Public Repositories</name>
			<url>http://10.0.12.207:8081/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>http://repo.spring.io/libs-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>http://repo.spring.io/libs-milestone-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>http://repo.spring.io/libs-release-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
	</repository>
	</repositories> -->
	<!-- <pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>Public Repositories</name>
			<url>http://10.0.12.207:8081/nexus/content/groups/public/</url>
		</pluginRepository>
	</pluginRepositories> -->

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka-server</artifactId>
		</dependency> -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency> -->
		<!-- <dependency>  
            <groupId>org.springframework.cloud</groupId>  
            <artifactId>spring-cloud-starter-bus-kafka</artifactId>  
        </dependency> -->
        <!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency> -->
	</dependencies>
	<!-- <dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.SR3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement> -->
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profileActive>dev</profileActive>
			</properties>
		</profile>
		<profile>
			<id>sit</id>
			<properties>
				<profileActive>sit</profileActive>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>pre</id>
			<properties>
				<profileActive>pre</profileActive>
			</properties>
		</profile>
		<profile>
			<id>prd</id>
			<properties>
				<profileActive>prd</profileActive>
			</properties>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources-props</id>
						<!-- 在default生命周期的 validate阶段就执行resources插件的copy-resources目标 -->
						<phase>validate</phase>
						<goals>
		                	<goal>copy-resources</goal>
		                </goals>
		                <configuration>
		                	<!-- 指定resources插件处理资源文件到哪个目录下 -->
                			<outputDirectory>${project.build.outputDirectory}</outputDirectory>
                			<!--  也可以用下面这样的方式（指定相对url的方式指定outputDirectory）
                			<outputDirectory>target/classes</outputDirectory>
                			 -->
			                <!-- 待处理的资源定义 -->
			                <resources>
			                  <resource>
			                  	
			                    <!-- 指定resources插件处理哪个目录下的资源文件 -->
			                    <directory>src/main/resources/env/${profileActive}</directory>
			                    <filtering>true</filtering>
			                    
			                  </resource>
			                </resources>
		              </configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>/env/dev/bootstrap.properties</exclude>
					<exclude>/env/sit/bootstrap.properties</exclude>
					<exclude>/env/prd/bootstrap.properties</exclude>
					<exclude>/env/pre/bootstrap.properties</exclude>
					<exclude>bootstrap.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<!-- <defaultGoal>compile</defaultGoal> -->
	</build>

</project>
